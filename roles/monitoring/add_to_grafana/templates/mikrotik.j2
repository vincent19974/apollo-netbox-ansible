###############################################################################
#                                 PING                                        #
###############################################################################
{%  set ping_hosts = telegraf_ping_hosts | dict2items | map(attribute='value') | list %}
{%  set node_name = cpe %}
{%  set node_ip = hostvars[cpe].ansible_host %}
[[inputs.ping]]
  ## Hosts to send ping packets to.
  urls = [ "{{ ping_hosts | unique | join('\", \"') }}" ]
  count = 5
  method = "native"
  interval = "60s"
  collection_jitter = "30s"
  tagexclude = [ "agent_host", "host" ]

  [inputs.ping.tags]
  vendor = "mikrotik"
  method = "PING"
  device = "{{ node_name }}"
{%  if hostvars[cpe].device_tenant is defined %}
  customer = "{{ hostvars[cpe].device_tenant }}"
{%  endif %}
{%  if hostvars[cpe].regions is defined %}
  region = "{{ hostvars[cpe].regions | difference(['patch01','patch02','patch03','patch04','patch05','patch06']) | first }}"
{%  endif %}


[[processors.enum]]
  [[processors.enum.mapping]]
    ## Name of the tag to map. Globs accepted.
    tag = "url"
    dest = "port"

    ## Table of mappings
    [processors.enum.mapping.value_mappings]
{%  for port,ip in telegraf_ping_hosts.items() %}
    "{{ ip }}" = "{{ port }}"
{%  endfor %}

###############################################################################
#                                 SNMP                                        #
###############################################################################


[[inputs.snmp]]
  agents = ["{{ node_ip }}"]
  version = 2
  community = "public"
  interval = "300s"
  collection_jitter = "60s"
  timeout = "60s"
  retries = 2
  tagexclude = [ "agent_host", "host" ]

  [inputs.snmp.tags]
  vendor = "mikrotik"
  method = "SNMP"
  device = "{{ node_name }}"
{%  if hostvars[cpe].device_tenant is defined %}
  customer = "{{ hostvars[cpe].device_tenant }}"
{%  endif %}
{%  if hostvars[cpe].regions is defined %}
  region = "{{ hostvars[cpe].regions | difference(['patch01','patch02','patch03','patch04','patch05','patch06']) | first }}"
{%  endif %}

###########################################
#           System                        #
###########################################

[[inputs.snmp.field]]
    oid = "RFC1213-MIB::sysName.0"
    name = "hostname"
    is_tag = true

[[inputs.snmp.field]]
  name = "osVersion"
  oid = "1.3.6.1.4.1.14988.1.1.4.4.0"

[[inputs.snmp.field]]
  name = "uptime"
  oid = "RFC1213-MIB::sysUpTime.0"

[[inputs.snmp.field]]
  name = "CPU5min_perc"
 #oid = "1.3.6.1.2.1.25.3.3.1.2"
  oid = "HOST-RESOURCES-MIB::hrProcessorLoad.1"
  conversion = "int"

[[inputs.snmp.field]]
  name = "CPU1min_perc"
  #oid = "1.3.6.1.4.1.2021.11.10"
  oid = "UCD-SNMP-MIB::ssCpuSystem.0"
  conversion = "int"

[[inputs.snmp.field]]
  name = "TotalMemory"
  oid = "1.3.6.1.2.1.25.2.3.1.5.65536"


[[inputs.snmp.field]]
  name = "UsedMemory"
  oid = "1.3.6.1.2.1.25.2.3.1.6.65536"


###########################################
#           Interface                        #
###########################################

[[inputs.snmp.table]]
  name = "interfaces"
  inherit_tags = ["hostname"]

[[inputs.snmp.table.field]]
  name = "Name"
  oid = "IF-MIB::ifName"
  is_tag = true

[[inputs.snmp.table.field]]
  name = "description"
  oid = "IF-MIB::ifAlias"

[[inputs.snmp.table.field]]
  oid = "IF-MIB::ifIndex"

[[inputs.snmp.table.field]]
  name = "MTU"
  oid = "IF-MIB::ifMtu"

[[inputs.snmp.table.field]]
  name = "last-change"
  oid = "IF-MIB::ifLastChange"

[[inputs.snmp.table.field]]
  name = "admin-status"
  oid = "IF-MIB::ifAdminStatus"

[[inputs.snmp.table.field]]
  name = "oper-status"
  oid = "IF-MIB::ifOperStatus"

[[inputs.snmp.table.field]]
  name = "in-octets"
  oid = "IF-MIB::ifHCInOctets"

[[inputs.snmp.table.field]]
  name = "out-octets"
  oid = "IF-MIB::ifHCOutOctets"

[[inputs.snmp.table.field]]
  name = "in-pkts"
  oid = "IF-MIB::ifHCInUcastPkts"

[[inputs.snmp.table.field]]
  name = "out-pkts"
  oid = "IF-MIB::ifHCOutUcastPkts"

[[inputs.snmp.table.field]]
  name = "in-unicast-pkts"
  oid = "IF-MIB::ifHCInUcastPkts"

[[inputs.snmp.table.field]]
  name = "out-unicast-pkts"
  oid = "IF-MIB::ifHCOutUcastPkts"

[[inputs.snmp.table.field]]
  name = "in-broadcast-pkts"
  oid = "IF-MIB::ifHCInBroadcastPkts"

[[inputs.snmp.table.field]]
  name = "out-broadcast-pkts"
  oid = "IF-MIB::ifHCOutBroadcastPkts"

[[inputs.snmp.table.field]]
  name = "in-multicast-pkts"
  oid = "IF-MIB::ifHCInMulticastPkts"

[[inputs.snmp.table.field]]
  name = "out-multicast-pkts"
  oid = "IF-MIB::ifHCOutMulticastPkts"

[[inputs.snmp.table.field]]
  name = "in-discards"
  oid = "IF-MIB::ifInDiscards"

[[inputs.snmp.table.field]]
  name = "out-discards"
  oid = "IF-MIB::ifOutDiscards"

[[inputs.snmp.table.field]]
  name = "in-errors"
  oid = "IF-MIB::ifInErrors"

[[inputs.snmp.table.field]]
  name = "out-errors"
  oid = "IF-MIB::ifOutErrors"
