---
- name: Create ELK Folder to store all Configs
  file:
    path: "{{ elk_configs_folder }}/{{ item }}" 
    state: directory
  loop:
    - elasticsearch
    - kibana
    - logstash/pipeline

- name: Create Elastic Config File
  template:
    src: 'configs/elastic.j2'
    dest: "{{ elk_configs_folder }}/elasticsearch/elasticsearch.yml"

- name: Create Kibana Config File
  template:
    src: 'configs/kibana.j2'
    dest: "{{ elk_configs_folder }}/kibana/kibana.yml"

- name: Create logstash Config File
  template:
    src: 'configs/logstash.j2'
    dest: "{{ elk_configs_folder }}/logstash/logstash.yml"

- name: Create logstash Pipelines File
  template:
    src: 'pipelines/net_syslog.j2'
    dest: "{{ elk_configs_folder }}/logstash/pipeline/net_syslog.conf"


- name: Build Docker Compose File
  template:
    src: 'docker-compose.j2'
    dest: "{{ elk_configs_folder }}/docker-compose.yml"

- name: Install Python3
  become: yes
  yum:
    name: python3
    state: present

- name: Upgrade PIP3
  become: yes
  command: pip3 install --upgrade pip

- name: Install Required Python Packages
  become: yes
  pip:
    name: "{{ item }}"
    state: present
  loop:
    - docker
    - docker-compose
  vars:
    ansible_python_interpreter: /usr/bin/python3

- name: Start ELK Containers
  docker_compose:
    project_src: "{{ elk_configs_folder }}"
    state: present
  register: docker_compose_output
  vars:
    ansible_python_interpreter: /usr/bin/python3

- debug: var=docker_compose_output
# - name: Start Containers
#   shell: "docker-compose up -d "
#   args:
#     chdir: "{{ elk_configs_folder }}"

