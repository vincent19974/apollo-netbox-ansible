---
- name: Deploy configuration based on Netbox
  hosts: all
  gather_facts: no
  tasks:
    - name: Get Node Data
      set_fact:
        device_netbox_data: "{{ query('netbox.netbox.nb_lookup', 'interfaces',
                                        api_endpoint=netbox_url,
                                        api_filter='device=' + inventory_hostname ,
                                        token=netbox_token) | list  }}"

        device_ip_data: "{{ query('netbox.netbox.nb_lookup', 'ip-addresses',
                                        api_endpoint=netbox_url,
                                        api_filter='device=' + inventory_hostname ,
                                        token=netbox_token) | list  }}"

    # - debug: var=device_netbox_data
    # - debug: var=device_ip_data

    - name: Build Configuration
      set_fact:
        config_to_push: "{{ config }}"
      
      vars:
        config: |
          {% for p in device_ip_data  %}
          {%  if not p.value.vrf  and p.value.assigned_object.name[:3] | lower == 'gig' %}
          {%  set port_status = device_netbox_data | selectattr(value.name, 'eqaulto',value.assigned_object.name) | select() %}
          interface {{ p.value.assigned_object.name }}
           ipv4 address {{ p.value.address | ipaddr('address') }} {{ p.value.address | ipaddr('netmask') }}
          {%  endif %}
          {%  endfor %}
    
    # - debug: var=config_to_push

    - name: copy file to tmp
      delegate_to: localhost
      copy:
        content: "{{ config_to_push }}"
        dest: '{{ playbook_dir }}/config_{{ inventory_hostname }}.cfg'
      check_mode: no

    - name: Push config to Device
      iosxr_config:
        src: "{{ playbook_dir }}/config_{{ inventory_hostname }}.cfg"
        #lines: "{{ config_to_push.split() }}"
      register: config_to_push
      vars:
        ansible_connection: network_cli
    
    # - debug: var=config_to_push

    - name: send Email
      run_once: yes
      delegate_to: localhost
      check_mode: no
      ignore_errors: true
      when: config_to_push.changed
      mail:
        host: smtp.office365.com
        port: 587
        subtype: plain
        username: kokasha@layer2.com.au
        password: 'K)K@sha@L2'
        from: kokasha@layer2.com.au
        to: kokasha@layer2.com.au
        subject: Config Push By Ansible
        body: |
          Configs That will be Pushed to These Nodes
          !!!
          {%  for host in play_hosts %}
          {{ host }}
          {%  endfor %}
          !!!

          {% for host in play_hosts %}
          {%  if hostvars[host].config_to_push.diff is defined %}
          {{ host }}
          ==========
          !!!
          {{ hostvars[host].config_to_push.diff.prepared  }}
          !!!
          {%  endif %}
          {%  endfor %}